@page "/identity/account/register"

<div class="container">
    <div class="row">
        <div class="col-lg-6">
            <EditForm Model="User" OnValidSubmit="HandleRegistration">
                <DataAnnotationsValidator />
                <ValidationSummary />
                <div class="card">
                    <div class="card-header">Fill this form to Register</div>
                    <div class="card-body">
                        <div class="form-group">
                            <label class="form-label">Fullname</label>
                            <InputText class="form-control" @bind-Value="User.FullName" />
                        </div>
                        <div class="form-group mt-3">
                            <label class="form-label">Email</label>
                            <InputText class="form-control" @bind-Value="User.Email" />
                        </div>
                        <div class="form-group mt-3">
                            <label class="form-label">Password</label>
                            <InputText type="password" class="form-control" @bind-Value="User.Password" />
                        </div>
                        <div class="form-group mt-3">
                            <label class="form-label">Confirm Password</label>
                            <InputText type="password" class="form-control" @bind-Value="User.ConfirmPassword" />
                        </div>
                        <div class="form-group mt-3">
                            <button class="btn btn-outline-primary float-end" type="submit">Register</button>
                        </div>
                    </div>
                </div>
            </EditForm>
        </div>
    </div>
</div>

@code {
    Register User = new();

    async Task HandleRegistration()
    {
        var result = await accountService.CreateAsync(User);
        if (result.Flag)
        {
            User = new();
        }
        else
        {
            // Xử lý lỗi đăng ký
        }
    }
}

